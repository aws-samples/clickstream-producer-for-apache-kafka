/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package samples.clickstream.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ClickEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5896537586908312555L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ClickEvent\",\"namespace\":\"samples.clickstream.avro\",\"fields\":[{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"eventtimestamp\",\"type\":\"long\"},{\"name\":\"devicetype\",\"type\":\"string\"},{\"name\":\"event_type\",\"type\":[\"string\",\"null\"]},{\"name\":\"product_type\",\"type\":[\"string\",\"null\"]},{\"name\":\"userid\",\"type\":\"int\"},{\"name\":\"globalseq\",\"type\":\"long\"},{\"name\":\"prevglobalseq\",\"type\":\"long\",\"default\":0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ClickEvent> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ClickEvent> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ClickEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ClickEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ClickEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ClickEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ClickEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ClickEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ClickEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence ip;
  private long eventtimestamp;
  private java.lang.CharSequence devicetype;
  private java.lang.CharSequence event_type;
  private java.lang.CharSequence product_type;
  private int userid;
  private long globalseq;
  private long prevglobalseq;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ClickEvent() {}

  /**
   * All-args constructor.
   * @param ip The new value for ip
   * @param eventtimestamp The new value for eventtimestamp
   * @param devicetype The new value for devicetype
   * @param event_type The new value for event_type
   * @param product_type The new value for product_type
   * @param userid The new value for userid
   * @param globalseq The new value for globalseq
   * @param prevglobalseq The new value for prevglobalseq
   */
  public ClickEvent(java.lang.CharSequence ip, java.lang.Long eventtimestamp, java.lang.CharSequence devicetype, java.lang.CharSequence event_type, java.lang.CharSequence product_type, java.lang.Integer userid, java.lang.Long globalseq, java.lang.Long prevglobalseq) {
    this.ip = ip;
    this.eventtimestamp = eventtimestamp;
    this.devicetype = devicetype;
    this.event_type = event_type;
    this.product_type = product_type;
    this.userid = userid;
    this.globalseq = globalseq;
    this.prevglobalseq = prevglobalseq;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ip;
    case 1: return eventtimestamp;
    case 2: return devicetype;
    case 3: return event_type;
    case 4: return product_type;
    case 5: return userid;
    case 6: return globalseq;
    case 7: return prevglobalseq;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ip = (java.lang.CharSequence)value$; break;
    case 1: eventtimestamp = (java.lang.Long)value$; break;
    case 2: devicetype = (java.lang.CharSequence)value$; break;
    case 3: event_type = (java.lang.CharSequence)value$; break;
    case 4: product_type = (java.lang.CharSequence)value$; break;
    case 5: userid = (java.lang.Integer)value$; break;
    case 6: globalseq = (java.lang.Long)value$; break;
    case 7: prevglobalseq = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'ip' field.
   * @return The value of the 'ip' field.
   */
  public java.lang.CharSequence getIp() {
    return ip;
  }


  /**
   * Sets the value of the 'ip' field.
   * @param value the value to set.
   */
  public void setIp(java.lang.CharSequence value) {
    this.ip = value;
  }

  /**
   * Gets the value of the 'eventtimestamp' field.
   * @return The value of the 'eventtimestamp' field.
   */
  public long getEventtimestamp() {
    return eventtimestamp;
  }


  /**
   * Sets the value of the 'eventtimestamp' field.
   * @param value the value to set.
   */
  public void setEventtimestamp(long value) {
    this.eventtimestamp = value;
  }

  /**
   * Gets the value of the 'devicetype' field.
   * @return The value of the 'devicetype' field.
   */
  public java.lang.CharSequence getDevicetype() {
    return devicetype;
  }


  /**
   * Sets the value of the 'devicetype' field.
   * @param value the value to set.
   */
  public void setDevicetype(java.lang.CharSequence value) {
    this.devicetype = value;
  }

  /**
   * Gets the value of the 'event_type' field.
   * @return The value of the 'event_type' field.
   */
  public java.lang.CharSequence getEventType() {
    return event_type;
  }


  /**
   * Sets the value of the 'event_type' field.
   * @param value the value to set.
   */
  public void setEventType(java.lang.CharSequence value) {
    this.event_type = value;
  }

  /**
   * Gets the value of the 'product_type' field.
   * @return The value of the 'product_type' field.
   */
  public java.lang.CharSequence getProductType() {
    return product_type;
  }


  /**
   * Sets the value of the 'product_type' field.
   * @param value the value to set.
   */
  public void setProductType(java.lang.CharSequence value) {
    this.product_type = value;
  }

  /**
   * Gets the value of the 'userid' field.
   * @return The value of the 'userid' field.
   */
  public int getUserid() {
    return userid;
  }


  /**
   * Sets the value of the 'userid' field.
   * @param value the value to set.
   */
  public void setUserid(int value) {
    this.userid = value;
  }

  /**
   * Gets the value of the 'globalseq' field.
   * @return The value of the 'globalseq' field.
   */
  public long getGlobalseq() {
    return globalseq;
  }


  /**
   * Sets the value of the 'globalseq' field.
   * @param value the value to set.
   */
  public void setGlobalseq(long value) {
    this.globalseq = value;
  }

  /**
   * Gets the value of the 'prevglobalseq' field.
   * @return The value of the 'prevglobalseq' field.
   */
  public long getPrevglobalseq() {
    return prevglobalseq;
  }


  /**
   * Sets the value of the 'prevglobalseq' field.
   * @param value the value to set.
   */
  public void setPrevglobalseq(long value) {
    this.prevglobalseq = value;
  }

  /**
   * Creates a new ClickEvent RecordBuilder.
   * @return A new ClickEvent RecordBuilder
   */
  public static samples.clickstream.avro.ClickEvent.Builder newBuilder() {
    return new samples.clickstream.avro.ClickEvent.Builder();
  }

  /**
   * Creates a new ClickEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ClickEvent RecordBuilder
   */
  public static samples.clickstream.avro.ClickEvent.Builder newBuilder(samples.clickstream.avro.ClickEvent.Builder other) {
    if (other == null) {
      return new samples.clickstream.avro.ClickEvent.Builder();
    } else {
      return new samples.clickstream.avro.ClickEvent.Builder(other);
    }
  }

  /**
   * Creates a new ClickEvent RecordBuilder by copying an existing ClickEvent instance.
   * @param other The existing instance to copy.
   * @return A new ClickEvent RecordBuilder
   */
  public static samples.clickstream.avro.ClickEvent.Builder newBuilder(samples.clickstream.avro.ClickEvent other) {
    if (other == null) {
      return new samples.clickstream.avro.ClickEvent.Builder();
    } else {
      return new samples.clickstream.avro.ClickEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for ClickEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ClickEvent>
    implements org.apache.avro.data.RecordBuilder<ClickEvent> {

    private java.lang.CharSequence ip;
    private long eventtimestamp;
    private java.lang.CharSequence devicetype;
    private java.lang.CharSequence event_type;
    private java.lang.CharSequence product_type;
    private int userid;
    private long globalseq;
    private long prevglobalseq;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(samples.clickstream.avro.ClickEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ip)) {
        this.ip = data().deepCopy(fields()[0].schema(), other.ip);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.eventtimestamp)) {
        this.eventtimestamp = data().deepCopy(fields()[1].schema(), other.eventtimestamp);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.devicetype)) {
        this.devicetype = data().deepCopy(fields()[2].schema(), other.devicetype);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.event_type)) {
        this.event_type = data().deepCopy(fields()[3].schema(), other.event_type);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.product_type)) {
        this.product_type = data().deepCopy(fields()[4].schema(), other.product_type);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.userid)) {
        this.userid = data().deepCopy(fields()[5].schema(), other.userid);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.globalseq)) {
        this.globalseq = data().deepCopy(fields()[6].schema(), other.globalseq);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.prevglobalseq)) {
        this.prevglobalseq = data().deepCopy(fields()[7].schema(), other.prevglobalseq);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing ClickEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(samples.clickstream.avro.ClickEvent other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.ip)) {
        this.ip = data().deepCopy(fields()[0].schema(), other.ip);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventtimestamp)) {
        this.eventtimestamp = data().deepCopy(fields()[1].schema(), other.eventtimestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.devicetype)) {
        this.devicetype = data().deepCopy(fields()[2].schema(), other.devicetype);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.event_type)) {
        this.event_type = data().deepCopy(fields()[3].schema(), other.event_type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.product_type)) {
        this.product_type = data().deepCopy(fields()[4].schema(), other.product_type);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.userid)) {
        this.userid = data().deepCopy(fields()[5].schema(), other.userid);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.globalseq)) {
        this.globalseq = data().deepCopy(fields()[6].schema(), other.globalseq);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.prevglobalseq)) {
        this.prevglobalseq = data().deepCopy(fields()[7].schema(), other.prevglobalseq);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'ip' field.
      * @return The value.
      */
    public java.lang.CharSequence getIp() {
      return ip;
    }


    /**
      * Sets the value of the 'ip' field.
      * @param value The value of 'ip'.
      * @return This builder.
      */
    public samples.clickstream.avro.ClickEvent.Builder setIp(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.ip = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ip' field has been set.
      * @return True if the 'ip' field has been set, false otherwise.
      */
    public boolean hasIp() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'ip' field.
      * @return This builder.
      */
    public samples.clickstream.avro.ClickEvent.Builder clearIp() {
      ip = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventtimestamp' field.
      * @return The value.
      */
    public long getEventtimestamp() {
      return eventtimestamp;
    }


    /**
      * Sets the value of the 'eventtimestamp' field.
      * @param value The value of 'eventtimestamp'.
      * @return This builder.
      */
    public samples.clickstream.avro.ClickEvent.Builder setEventtimestamp(long value) {
      validate(fields()[1], value);
      this.eventtimestamp = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'eventtimestamp' field has been set.
      * @return True if the 'eventtimestamp' field has been set, false otherwise.
      */
    public boolean hasEventtimestamp() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'eventtimestamp' field.
      * @return This builder.
      */
    public samples.clickstream.avro.ClickEvent.Builder clearEventtimestamp() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'devicetype' field.
      * @return The value.
      */
    public java.lang.CharSequence getDevicetype() {
      return devicetype;
    }


    /**
      * Sets the value of the 'devicetype' field.
      * @param value The value of 'devicetype'.
      * @return This builder.
      */
    public samples.clickstream.avro.ClickEvent.Builder setDevicetype(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.devicetype = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'devicetype' field has been set.
      * @return True if the 'devicetype' field has been set, false otherwise.
      */
    public boolean hasDevicetype() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'devicetype' field.
      * @return This builder.
      */
    public samples.clickstream.avro.ClickEvent.Builder clearDevicetype() {
      devicetype = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'event_type' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventType() {
      return event_type;
    }


    /**
      * Sets the value of the 'event_type' field.
      * @param value The value of 'event_type'.
      * @return This builder.
      */
    public samples.clickstream.avro.ClickEvent.Builder setEventType(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.event_type = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'event_type' field has been set.
      * @return True if the 'event_type' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'event_type' field.
      * @return This builder.
      */
    public samples.clickstream.avro.ClickEvent.Builder clearEventType() {
      event_type = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'product_type' field.
      * @return The value.
      */
    public java.lang.CharSequence getProductType() {
      return product_type;
    }


    /**
      * Sets the value of the 'product_type' field.
      * @param value The value of 'product_type'.
      * @return This builder.
      */
    public samples.clickstream.avro.ClickEvent.Builder setProductType(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.product_type = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'product_type' field has been set.
      * @return True if the 'product_type' field has been set, false otherwise.
      */
    public boolean hasProductType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'product_type' field.
      * @return This builder.
      */
    public samples.clickstream.avro.ClickEvent.Builder clearProductType() {
      product_type = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'userid' field.
      * @return The value.
      */
    public int getUserid() {
      return userid;
    }


    /**
      * Sets the value of the 'userid' field.
      * @param value The value of 'userid'.
      * @return This builder.
      */
    public samples.clickstream.avro.ClickEvent.Builder setUserid(int value) {
      validate(fields()[5], value);
      this.userid = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'userid' field has been set.
      * @return True if the 'userid' field has been set, false otherwise.
      */
    public boolean hasUserid() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'userid' field.
      * @return This builder.
      */
    public samples.clickstream.avro.ClickEvent.Builder clearUserid() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'globalseq' field.
      * @return The value.
      */
    public long getGlobalseq() {
      return globalseq;
    }


    /**
      * Sets the value of the 'globalseq' field.
      * @param value The value of 'globalseq'.
      * @return This builder.
      */
    public samples.clickstream.avro.ClickEvent.Builder setGlobalseq(long value) {
      validate(fields()[6], value);
      this.globalseq = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'globalseq' field has been set.
      * @return True if the 'globalseq' field has been set, false otherwise.
      */
    public boolean hasGlobalseq() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'globalseq' field.
      * @return This builder.
      */
    public samples.clickstream.avro.ClickEvent.Builder clearGlobalseq() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'prevglobalseq' field.
      * @return The value.
      */
    public long getPrevglobalseq() {
      return prevglobalseq;
    }


    /**
      * Sets the value of the 'prevglobalseq' field.
      * @param value The value of 'prevglobalseq'.
      * @return This builder.
      */
    public samples.clickstream.avro.ClickEvent.Builder setPrevglobalseq(long value) {
      validate(fields()[7], value);
      this.prevglobalseq = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'prevglobalseq' field has been set.
      * @return True if the 'prevglobalseq' field has been set, false otherwise.
      */
    public boolean hasPrevglobalseq() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'prevglobalseq' field.
      * @return This builder.
      */
    public samples.clickstream.avro.ClickEvent.Builder clearPrevglobalseq() {
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ClickEvent build() {
      try {
        ClickEvent record = new ClickEvent();
        record.ip = fieldSetFlags()[0] ? this.ip : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.eventtimestamp = fieldSetFlags()[1] ? this.eventtimestamp : (java.lang.Long) defaultValue(fields()[1]);
        record.devicetype = fieldSetFlags()[2] ? this.devicetype : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.event_type = fieldSetFlags()[3] ? this.event_type : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.product_type = fieldSetFlags()[4] ? this.product_type : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.userid = fieldSetFlags()[5] ? this.userid : (java.lang.Integer) defaultValue(fields()[5]);
        record.globalseq = fieldSetFlags()[6] ? this.globalseq : (java.lang.Long) defaultValue(fields()[6]);
        record.prevglobalseq = fieldSetFlags()[7] ? this.prevglobalseq : (java.lang.Long) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ClickEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<ClickEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ClickEvent>
    READER$ = (org.apache.avro.io.DatumReader<ClickEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.ip);

    out.writeLong(this.eventtimestamp);

    out.writeString(this.devicetype);

    if (this.event_type == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.event_type);
    }

    if (this.product_type == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.product_type);
    }

    out.writeInt(this.userid);

    out.writeLong(this.globalseq);

    out.writeLong(this.prevglobalseq);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.ip = in.readString(this.ip instanceof Utf8 ? (Utf8)this.ip : null);

      this.eventtimestamp = in.readLong();

      this.devicetype = in.readString(this.devicetype instanceof Utf8 ? (Utf8)this.devicetype : null);

      if (in.readIndex() != 0) {
        in.readNull();
        this.event_type = null;
      } else {
        this.event_type = in.readString(this.event_type instanceof Utf8 ? (Utf8)this.event_type : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.product_type = null;
      } else {
        this.product_type = in.readString(this.product_type instanceof Utf8 ? (Utf8)this.product_type : null);
      }

      this.userid = in.readInt();

      this.globalseq = in.readLong();

      this.prevglobalseq = in.readLong();

    } else {
      for (int i = 0; i < 8; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.ip = in.readString(this.ip instanceof Utf8 ? (Utf8)this.ip : null);
          break;

        case 1:
          this.eventtimestamp = in.readLong();
          break;

        case 2:
          this.devicetype = in.readString(this.devicetype instanceof Utf8 ? (Utf8)this.devicetype : null);
          break;

        case 3:
          if (in.readIndex() != 0) {
            in.readNull();
            this.event_type = null;
          } else {
            this.event_type = in.readString(this.event_type instanceof Utf8 ? (Utf8)this.event_type : null);
          }
          break;

        case 4:
          if (in.readIndex() != 0) {
            in.readNull();
            this.product_type = null;
          } else {
            this.product_type = in.readString(this.product_type instanceof Utf8 ? (Utf8)this.product_type : null);
          }
          break;

        case 5:
          this.userid = in.readInt();
          break;

        case 6:
          this.globalseq = in.readLong();
          break;

        case 7:
          this.prevglobalseq = in.readLong();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










